#Utilizado en los menús distribuidos
application.appUrlPlaceHolder = PROJECTNAME 
application.baseName = Nombre del proyecto
application.appName = Nombre del modulo

# Driver de la base de datos
karaku.jpa.driverName = org.postgresql.Driver

# Permite habilitar o deshabilitar JPA
karaku.jpa.enabled = true

# Permite definir si se utilzirá o no Liquibase
karaku.liquibase.enabled = true

# Configuración de HIBERNATE
hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
hibernate.show_sql = true
hibernate.format_sql = false
hibernate.hbm2ddl.auto = validate
hibernate.envers.schema = audit

# Paquetes donde se encuentran las interfaces
# Los requeridos por karaku son:
# * py.una.pol.karaku.model: para envers.
# * py.una.pol.karaku.domail: para auditoría mediate @Audit.
# * py.una.pol.karaku.services.client: para el gestor de URLs de karaku.
# * py.una.pol.karaku.replication.client: para el gestor de replicación.
#
# Normalmente las entidades se almacenan en "py.una.project.domain"
base-package-hibernate = py.una.pol.karaku.model py.una.pol.karaku.domain  py.una.pol.karaku.services.client py.una.project.domain

#Archivo donde se almacena informacion cambiante, las propiedades 
#dentro de este archivo se mexclan con las principales, y pueden
#ser utilizadas dentro de la definicion de cualquier bean
karaku.changing.properties = move_me.properties

# Permiso básico necesario para utilizar el sistema.
# Cualquier usuario que no tenga este permiso será rechazado
karaku.security.basic = SIGH

# Lista separada por espacios de bundles
# Las propiedades de karaku se encuentran en "language.properties.karaku", y
# si se agregan más archivos de propiedades separar los directorios con puntos.
language_bundles = 	../language.properties.karaku \
					../language.properties.project
					
# Ubicación del menu (karaku no tiene menú base)
karaku.menu.location =  menu/menu.xml

# Ubicación del db-changelog individual de cada sistema
liquibase.changelog-file = classpath:database/project/db-changelog.xml

# Soporte para invocación de servicios SOAP.
#
# Requiere de conexión a la base de datos y py.una.pol.karaku.services.client en 
# base-hibernate-package o de la llave `karaku.menu.json_urls` que apunte a un 
# arhivo json.
karaku.ws.client.enabled = false

# Para menú distribuido se necesita "py.una.med.karaku.menu.schemas"
# karaku.ws.client.packages_to_scan.with_spaces = py.una.pol.karaku.menu.schemas

# ubicación del archivo que define la url de los servicios a invocar.
# karaku.menu.json_urls = urls_json

###############
# Replicacion #
###############

# Soporte para replicación de karaku.
karaku.replication.enabled = false

# Se debe usar una base de datos embebida o utilizar la base de datos
# definida en hibernate.database.url
# notar que son requeridos tambien el user y el password
test.hibernate.use_embedded = true
test.hibernate.dialect = org.hibernate.dialect.H2Dialect